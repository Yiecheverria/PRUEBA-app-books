version: '3'

services:
  booksservice:
    image: yiecheverria/app-books:1.0.0
    environment:
      SERVER_PORT: 9000
      DB_CONNECTION_USERNAME: postgres
      DB_CONNECTION_PASSWORD: postgres
      DB_CONNECTION_URL: jdbc:postgresql://postgres-sql:5432/distribuida
      AUTHOR_URL: http://authorservice:7000
    depends_on:
      - postgres-sql
      - traefik
    deploy:
      replicas: 3
    labels:
      - traefik.enable=true
      - "traefik.http.routers.booksservice.rule=Host(`book.localhost`)"
      - "traefik.http.services.booksservice.loadbalancer.server.port=9000"

  authorservice:
    image: yiecheverria/app-authors:1.0.0
    environment:
      QUARKUS_HTTP_PORT: 7000
      JAVA_OPTS: '-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager -Dquarkus-profile=docker'
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres-sql:5432/distribuida
    depends_on:
      - postgres-sql
      - traefik
    deploy:
      replicas: 2
    labels:
      - traefik.enable=true
      - "traefik.http.routers.authorservice.rule=Host(`author.localhost`)"
      - "traefik.http.services.authorservice.loadbalancer.server.port=7000"

  postgres-sql:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: distribuida

  traefik:
      image: traefik:v2.9.6
      restart: always
      command:
        - --accesslog
        - --api.insecure=true
        - --providers.docker
        - --providers.docker.exposedbydefault=false
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      ports:
        - "80:80"
        - "8080:8080"